package com.cp3406.financetracker.ui.transactions

import android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.core.content.ContextCompat\nimport androidx.recyclerview.widget.DiffUtil\nimport androidx.recyclerview.widget.ListAdapter\nimport androidx.recyclerview.widget.RecyclerView\nimport com.cp3406.financetracker.R\nimport com.cp3406.financetracker.databinding.ItemTransactionBinding\nimport java.text.NumberFormat\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nclass TransactionAdapter(\n    private val onItemClick: (Transaction) -> Unit\n) : ListAdapter<Transaction, TransactionAdapter.TransactionViewHolder>(TransactionDiffCallback()) {\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TransactionViewHolder {\n        val binding = ItemTransactionBinding.inflate(\n            LayoutInflater.from(parent.context), parent, false\n        )\n        return TransactionViewHolder(binding)\n    }\n\n    override fun onBindViewHolder(holder: TransactionViewHolder, position: Int) {\n        holder.bind(getItem(position), onItemClick)\n    }\n\n    class TransactionViewHolder(private val binding: ItemTransactionBinding) : RecyclerView.ViewHolder(binding.root) {\n        \n        private val dateFormatter = SimpleDateFormat(\"MMM dd\", Locale.getDefault())\n        private val currencyFormatter = NumberFormat.getCurrencyInstance()\n\n        fun bind(transaction: Transaction, onItemClick: (Transaction) -> Unit) {\n            binding.apply {\n                descriptionText.text = transaction.description\n                categoryText.text = transaction.category\n                dateText.text = dateFormatter.format(transaction.date)\n                \n                val formattedAmount = currencyFormatter.format(Math.abs(transaction.amount))\n                amountText.text = if (transaction.isExpense) \"-$formattedAmount\" else \"+$formattedAmount\"\n                \n                val color = if (transaction.isExpense) {\n                    ContextCompat.getColor(root.context, R.color.expense_red)\n                } else {\n                    ContextCompat.getColor(root.context, R.color.income_green)\n                }\n                amountText.setTextColor(color)\n                \n                root.setOnClickListener { onItemClick(transaction) }\n            }\n        }\n    }\n\n    private class TransactionDiffCallback : DiffUtil.ItemCallback<Transaction>() {\n        override fun areItemsTheSame(oldItem: Transaction, newItem: Transaction): Boolean {\n            return oldItem.id == newItem.id\n        }\n\n        override fun areContentsTheSame(oldItem: Transaction, newItem: Transaction): Boolean {\n            return oldItem == newItem\n        }\n    }\n}